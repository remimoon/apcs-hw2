3/11/15

Linked List- comprised of elements(nodes),a set of nodes and a way to get to the "start" node
	node-contains some data/info on how to get to the next node

public class Node {
	private String data;
	private Node next;

	public Node(String s){
		data = s;
	}

	public void setData(String s){
		data = s;
	}

	public String getData() {
		return data;
	}

	public void setNext(Node n) {
		return next;
	}

	public String toString(){
		return data;
	}
}

---

public class Driver {

	public static main void(String[] args) {
		Node n = new Node("hello");
		//System.out.println(n);

		Node n2 = new Node("world");
		//System.out.println(n2);

		n.setNext(n2);
		System.out.println(n.getNext().getData()); //prints out world
		System.out.println(n.getNext()); 

		n.getNext.setData("pickle");
		System.out.println(n2); //prints out pickle
		System.out.println(n.getNext().getData());

		n2.setData("watermelon");
		System.out.println(n.getNext().getData());

		n2.setNext(new Node("abc")); //create new node "abc"
		System.out.println(n.getNext().getNext().getData()); //prints "abc"
		
		n.getNext().getNext().setNext(new Node("yabba"));

		Node tmp = new Node ("start"); //sets tmp as first node
		tmp.setNext(n);
		n = tmp; //makes n refer to start of list

		//prints out entire linked list
		tmp = n;
		while (tmp != null){
			System.out.println(tmp);
			tmp = tmp.getNext();
		}

		//OR

		for (tmp = n; tmp != null; tmp = tmp.getNext()){
			System.out.println(tmp);
		}
	}

}

**
node tmp = n;
while tmp != null
 	tmp = tmp.getNext();
***












